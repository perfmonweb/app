{"version":3,"sources":["redux/actions/types.js","redux/reducers/directory/directory.reducer.jsx","redux/reducers/fps/fps.utils.jsx","redux/reducers/fps/fps.reducer.jsx","redux/reducers/index.js","redux/store.js","history.js","components/header/header.styles.jsx","redux/reducers/fps/fps.selector.jsx","redux/actions/index.js","firebase/api.js","firebase/config.js","components/header/header.component.jsx","App.styles.jsx","components/basic/basic.styles.jsx","components/basic/basic.component.jsx","components/metric/metric.component.jsx","components/cpu/cpu.component.jsx","components/fps/fps.component.jsx","components/mem/mem.component.jsx","components/side-panel/side-panel.styles.jsx","components/side-panel/side-panel.component.jsx","components/home/home.component.jsx","components/no-match/no-match.component.jsx","redux/reducers/directory/directory.selector.jsx","components/folder/folder.styles.jsx","components/folder/folder.component.jsx","components/folderView/folderView.styles.jsx","components/folderView/folderView.component.jsx","components/sessions/display-chart/display-chart.component.jsx","components/sessions/singledir/single.styles.jsx","components/sessions/singledir/single.component.jsx","App.js","components/welcome/welcome.component.jsx","index.js"],"names":["SET_DEVICE","SET_PACKAGE_NAME","SET_DEVICE_PROP","TOGGLE_RECORDING","SET_ERROR","SET_FPS","SET_CPU","SET_MEM","SET_CHECKED","SET_SESSION","RESET_SESSION","SET_SESSION_TIME","SET_FOLDERS","SET_PATH","INITIAL_STATE","folders","selectedPath","directoryReducer","state","action","type","payload","setDeviceStatus","deviceStatusString","ipAndStatus","split","status","undefined","ip_address","setDeviceProps","deviceProps","setCheckedValue","mod","value","getAverageAppUsage","values","length","reduce","acc","metric","parseInt","app","toFixed","getAverageDeviceUsage","device","session","package","error","fpsValues","cpuValues","memValues","isRecording","fpsChecked","cpuChecked","memChecked","sessionTime","fpsReducer","val","persistConfig","key","storage","whitelist","rootReducer","combineReducers","fps","directory","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","reducer","applyMiddleware","createBrowserHistory","blue","red","yellow","MainContainer","styled","div","Logo","Status","props","light","Item","Link","SessionTab","ToolTip","AllSessions","fpsState","selectIp","createSelector","selectStatus","selectPackage","selectDeviceProp","selectDeviceName","prop","String","device_model","replace","selectDevicePlatform","id","selectDeviceBoard","board","selectIsRecording","selectError","selectFPSValues","selectCurrentFPS","arr","at","selectCPUValues","selectCurrentCPU","duration","selectMEMValues","selectCurrentMEM","selectisFPSChecked","selectisCPUChecked","cpu","selectisMEMChecked","mem","selectSession","selectIsSessionAvailable","sessionId","selectSessionTime","toggleRecording","deviceId","setError","setChecked","setPath","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","getAllDocuments","path","a","getDocs","collection","addDocumentToCollection","data","pathString","item","setDoc","doc","getDocument","docRef","getDoc","updateDocument","isDocumentExists","docSnap","exists","HeaderComponent","handleChange","bind","connectSession","fetch","then","response","json","setDevice","event","this","setState","target","deviceBoard","devicePlatform","inputProvided","trim","Date","getTime","testId","v1","documentName","alert","isExists","setSession","preventDefault","ip","className","style","left","onClick","navigator","clipboard","writeText","color","name","placeholder","onChange","to","React","Component","mapStateToProps","createStructuredSelector","connect","dispatch","AppContainer","MetricContainer","SubContainer","slideText","keyframes","blinkCaret","AnimatedPet","StyledInputContainer","StyledInput","input","StyledDropDownElements","Details","DebugSection","setPackage","setDeviceProp","err","resetValues","setSessionTime","useState","packages","setPackages","term","setTerm","debouncedTerm","setDebouncedTerm","time","setTime","startTimer","setStartTimer","useEffect","timerId","setTimeout","clearTimeout","apiUrl","method","interval","setInterval","Math","floor","clearInterval","ms","startButtonClassName","stopButtonClassName","getSeconds","ceil","e","stopPropagation","onTermChange","Fragment","map","idx","setPackageTerm","sec","toLocaleString","minimumIntegerDigits","useGrouping","getMinutes","getMilliSeconds","MetricComponent","chartType","width","height","legendToggle","options","hAxis","title","vAxis","join","CPUComponent","i","selectedPackage","contentType","headers","get","indexOf","setCPU","parseFloat","text","push","currentMetricValue","currentMetricDuration","FPSComponent","setFPS","MemoryComponent","setMEM","SidePanelContainer","Panel","Pane","isFPSChecked","isCPUChecked","isMEMChecked","currentFPS","currentCPU","currentMEM","FPSValues","CPUValues","MEMValues","isSessionAvailable","packageName","fpsOpen","setIsFPSOpen","cpuOpen","setIsCPUOpen","memOpen","setIsMEMOpen","uploadStatus","setUploadStatus","msg","setMsg","checked","disabled","catch","updateDocumentToFirebase","class","isMemChecked","NoMatchComponent","directoryState","selectFolders","selectPath","FolderIcon","Folder","HeadingBar","Directory","FolderView","level","slice","folder","DisplayFPS","FPSData","DisplayCPU","CPUData","DisplayMEM","MEMData","DisplayChart","chartData","Perimeter","Single","loaded","itemType","isFolder","match","params","paramsValues","url","Object","dirLevel","pathArray","documents","x","docs","ref","setFolders","Promise","resolve","reject","docData","updatedPath","uPath","console","log","App","exact","component","HomeComponent","location","pathname","displayError","Welcome","href","rel","ReactDOM","render","StrictMode","basename","history","document","getElementById"],"mappings":"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","file":"static/js/main.45948fdc.chunk.js","sourcesContent":["export const SET_DEVICE = 'SET_DEVICE';\nexport const SET_PACKAGE_NAME = 'SET_PACKAGE_NAME';\nexport const SET_DEVICE_PROP = 'SET_DEVICE_PROP';\nexport const TOGGLE_RECORDING = 'TOGGLE_RECORDING';\nexport const SET_ERROR = 'SET_ERROR';\nexport const SET_FPS = 'SET_FPS';\nexport const SET_CPU = 'SET_CPU';\nexport const SET_MEM = 'SET_MEM';\nexport const SET_CHECKED = 'SET_CHECKED';\nexport const SET_SESSION = 'SET_SESSION';\nexport const RESET_SESSION = 'RESET_SESSION';\nexport const SET_SESSION_TIME = 'SET_SESSION_TIME';\nexport const SET_FOLDERS = 'SET_FOLDERS';\nexport const SET_PATH = 'SET_PATH';\n","import { SET_FOLDERS, SET_PATH } from '../../actions/types';\n\nconst INITIAL_STATE = {\n  folders: [],\n  selectedPath: '',\n};\n\nconst directoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_FOLDERS:\n      return { ...state, folders: action.payload };\n    case SET_PATH:\n      return {\n        ...state,\n        selectedPath: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default directoryReducer;\n","export const setDeviceStatus = (state, deviceStatusString) => {\n  const devicesListString = deviceStatusString[1].split('\\n')[1];\n  const ipAndStatus = devicesListString.split('\\t');\n  const status = ipAndStatus[1] === undefined ? '' : ipAndStatus[1];\n  return { ...state, ip_address: ipAndStatus[0], status: status };\n};\n\nexport const setDeviceProps = (state, deviceProps) => ({\n  ...state,\n  deviceProps: deviceProps[0],\n});\n\nexport const setCheckedValue = (state, mod, value) => {\n  return { ...state, [mod]: value };\n};\n\nexport const getAverageFPS = (values) => {\n  let x = values.length\n    ? values.reduce((acc, fps) => acc + parseInt(fps.value), 0) / values.length\n    : 0;\n  return x.toFixed(2);\n};\n\nexport const getAverageAppUsage = (values) => {\n  let x = values.length\n    ? values.reduce((acc, metric) => acc + parseInt(metric.app), 0) /\n      values.length\n    : 0;\n  return x.toFixed(2);\n};\n\nexport const getAverageDeviceUsage = (values) => {\n  let x = values.length\n    ? values.reduce((acc, metric) => acc + parseInt(metric.device), 0) /\n      values.length\n    : 0;\n  return x.toFixed(2);\n};\n","import {\n  SET_DEVICE,\n  SET_DEVICE_PROP,\n  SET_ERROR,\n  SET_PACKAGE_NAME,\n  TOGGLE_RECORDING,\n  SET_FPS,\n  SET_CPU,\n  SET_MEM,\n  SET_CHECKED,\n  SET_SESSION,\n  RESET_SESSION,\n  SET_SESSION_TIME,\n} from '../../actions/types';\nimport { setCheckedValue, setDeviceProps, setDeviceStatus } from './fps.utils';\n\nconst INITIAL_STATE = {\n  ip_address: '',\n  session: {},\n  status: '',\n  package: '',\n  error: '',\n  fpsValues: [],\n  cpuValues: [],\n  memValues: [],\n  isRecording: false,\n  deviceProps: {},\n  fpsChecked: true,\n  cpuChecked: true,\n  memChecked: true,\n  sessionTime: 0,\n};\n\nconst fpsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_DEVICE:\n      return setDeviceStatus(state, action.payload);\n    case SET_PACKAGE_NAME:\n      return { ...state, package: action.payload };\n    case SET_DEVICE_PROP:\n      return setDeviceProps(state, action.payload);\n    case TOGGLE_RECORDING:\n      return { ...state, isRecording: action.payload };\n    case SET_ERROR:\n      return { ...state, error: action.payload };\n    case SET_FPS:\n      return { ...state, fpsValues: [...state.fpsValues, action.payload] };\n    case SET_CPU:\n      return { ...state, cpuValues: [...state.cpuValues, action.payload] };\n    case SET_MEM:\n      return { ...state, memValues: [...state.memValues, action.payload] };\n    case SET_CHECKED:\n      return setCheckedValue(state, action.mod, action.val);\n    case SET_SESSION:\n      return { ...state, session: action.payload };\n    case RESET_SESSION:\n      return {\n        ...state,\n        fpsValues: [],\n        cpuValues: [],\n        memValues: [],\n        sessionTime: 0,\n        fpsChecked: false,\n        cpuChecked: false,\n        memChecked: false,\n      };\n    case SET_SESSION_TIME:\n      return { ...state, sessionTime: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default fpsReducer;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport directoryReducer from './directory/directory.reducer';\nimport fpsReducer from './fps/fps.reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['fps'],\n};\n\nconst rootReducer = combineReducers({\n  fps: fpsReducer,\n  directory: directoryReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport reducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = [thunk];\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport const persistor = store;\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst blue = 'white';\nconst red = '#FF3E30';\nconst yellow = '#F7B529';\nconst green = '#black';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  position: relative;\n  height: 40px;\n  background: #3b7aee;\n  padding-bottom: 5%;\n`;\n\nexport const Logo = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: auto;\n  font-size: 2em;\n  .centered {\n    transform: translate(10px, 10px);\n    height: 100%;\n\n    span {\n      &:nth-child(6n + 1) {\n        color: ${blue};\n      }\n      &:nth-child(6n + 2) {\n        color: ${red};\n      }\n      &:nth-child(6n + 3) {\n        color: ${yellow};\n      }\n      &:nth-child(6n + 4) {\n        color: ${blue};\n      }\n      &:nth-child(6n + 5) {\n        color: ${green};\n      }\n      &:nth-child(6n + 6) {\n        color: ${red};\n      }\n    }\n  }\n`;\n\nexport const Status = styled.div`\n  display: flex;\n  position: absolute;\n  top: 30%;\n  left: 30%;\n  transform: translate(-50%, -50%);\n  border: 1px solid ${(props) => (props.light === 'device' ? 'green' : 'red')};\n  color: ${(props) => (props.light === 'device' ? 'green' : 'red')};\n  border-radius: 10px;\n  padding: 2px 4px;\n  align-items: center;\n  justify-content: center;\n  background: white;\n  .st {\n  }\n  .light {\n    border: 1px solid ${(props) => (props.light === 'device' ? 'green' : 'red')};\n    border-radius: 50%;\n    background: ${(props) => (props.light === 'device' ? 'green' : red)};\n    margin: 0 5px;\n    height: 10px;\n    width: 10px;\n    box-shadow: 0px 0px 10px 4px\n      ${(props) => (props.light === 'device' ? 'green' : red)};\n  }\n\n  .press {\n    /* border: 0.5px solid black; */\n    border-radius: 5px;\n    margin: 0 5px;\n    box-shadow: -1px 1px 1px 1px #888888;\n\n    :hover {\n      cursor: pointer;\n      transform: translateY(-1px);\n      box-shadow: -1px 2px 1px 1px #888888;\n    }\n\n    :active {\n      cursor: pointer;\n      transform: translateY(1px);\n      box-shadow: -1px 0px 1px 0px #888888;\n    }\n  }\n`;\n\nexport const Item = styled(Link)`\n  position: absolute;\n  top: 0;\n  right: 15px;\n  height: 100%;\n  width: auto;\n  font-size: 2em;\n  text-decoration: none;\n  .centered {\n    transform: translate(10px, 10px);\n    height: 100%;\n    span {\n      &:nth-child(6n + 1) {\n        color: ${blue};\n      }\n      &:nth-child(6n + 2) {\n        color: ${red};\n      }\n      &:nth-child(6n + 3) {\n        color: ${yellow};\n      }\n      &:nth-child(6n + 4) {\n        color: ${blue};\n      }\n      &:nth-child(6n + 5) {\n        color: black;\n      }\n      &:nth-child(6n + 6) {\n        color: ${red};\n      }\n      &:nth-child(6n + 7) {\n        color: ${blue};\n      }\n    }\n  }\n`;\n\nexport const SessionTab = styled.div`\n  position: absolute;\n  top: 30%;\n  left: 70%;\n  transform: translate(-50%, -50%);\n  border: 1px solid black;\n  border-radius: 10px;\n  padding: 2px 4px;\n  align-items: center;\n  justify-content: center;\n  background: white;\n  form > input {\n    -webkit-appearance: none;\n    border: 0;\n    :focus {\n      border: 0;\n      outline: 0;\n    }\n  }\n\n  form {\n    display: flex;\n    .button {\n    }\n  }\n`;\n\nexport const ToolTip = styled.div`\n  background: none;\n  padding: 0 3px;\n  :hover {\n    cursor: pointer;\n    transform: translateY(-1px);\n    .tooltip {\n      visibility: visible;\n    }\n  }\n\n  :active {\n    cursor: pointer;\n    transform: translateY(1px);\n  }\n  .tooltip {\n    visibility: hidden;\n    width: 140px;\n    background-color: #0006;\n    color: #fff;\n    text-align: center;\n    padding: 5px 0;\n    border-radius: 6px;\n    font-size: smaller;\n\n    /* Position the tooltip text - see examples below! */\n    position: absolute;\n    z-index: 7;\n\n    ::after {\n      content: ' ';\n      position: absolute;\n      top: 50%;\n      right: 100%; /* To the left of the tooltip */\n      margin-top: -5px;\n      border-width: 5px;\n      border-style: solid;\n      border-color: transparent black transparent transparent;\n    }\n  }\n`;\n\nexport const AllSessions = styled(Link)`\n  display: block;\n  position: absolute;\n  top: 28%;\n  right: 5%;\n  transform: translate(-50%, -50%);\n  border-radius: 10px;\n  padding: 4px 5px;\n  font-size: medium;\n  font-weight: bold;\n  letter-spacing: 1.1px;\n  color: whitesmoke;\n  text-decoration: none;\n  label {\n    :hover {\n      cursor: pointer;\n    }\n  }\n  :hover {\n    background: #163c83;\n    color: white;\n    cursor: pointer;\n    box-shadow: inset -1px -1px 2px 2px black;\n    box-shadow: 1px 1px 2px 2px black;\n    top: 28%;\n  }\n\n  :active {\n    transform: scaleY(1.5px);\n    top: 30%;\n  }\n`;\n","import { createSelector } from 'reselect';\n\nconst fpsState = (state) => state.fps;\n\nexport const selectIp = createSelector([fpsState], (state) => state.ip_address);\nexport const selectStatus = createSelector([fpsState], (state) => state.status);\nexport const selectPackage = createSelector(\n  [fpsState],\n  (state) => state.package\n);\n\nexport const selectDeviceProp = createSelector(\n  [fpsState],\n  (state) => state.deviceProps\n);\n\nexport const selectDeviceName = createSelector([selectDeviceProp], (prop) =>\n  String(prop.device_model).replace(/[[\\]']+/g, '')\n);\n\nexport const selectDevicePlatform = createSelector([selectDeviceProp], (prop) =>\n  String(prop.id).replace(/[[\\]']+/g, '')\n);\n\nexport const selectDeviceBoard = createSelector([selectDeviceProp], (prop) =>\n  String(prop.board).replace(/[[\\]']+/g, '')\n);\n\nexport const selectIsRecording = createSelector(\n  [fpsState],\n  (state) => state.isRecording\n);\n\nexport const selectError = createSelector([fpsState], (state) => state.error);\n\nexport const selectFPSValues = createSelector(\n  [fpsState],\n  (state) => state.fpsValues\n);\n\nexport const selectCurrentFPS = createSelector([selectFPSValues], (arr) =>\n  arr ? arr.at(-1) : { value: 0 }\n);\n\nexport const selectCPUValues = createSelector(\n  [fpsState],\n  (state) => state.cpuValues\n);\n\nexport const selectCurrentCPU = createSelector([selectCPUValues], (arr) =>\n  arr ? arr.at(-1) : { app: 0, device: 0, duration: 0 }\n);\n\nexport const selectMEMValues = createSelector(\n  [fpsState],\n  (state) => state.memValues\n);\n\nexport const selectCurrentMEM = createSelector([selectMEMValues], (arr) =>\n  arr ? arr.at(-1) : { app: 0, device: 0, duration: 0 }\n);\n\nexport const selectisFPSChecked = createSelector(\n  [fpsState],\n  (fps) => fps.fpsChecked\n);\n\nexport const selectisCPUChecked = createSelector(\n  [fpsState],\n  (cpu) => cpu.cpuChecked\n);\n\nexport const selectisMEMChecked = createSelector(\n  [fpsState],\n  (mem) => mem.memChecked\n);\n\nexport const selectSession = createSelector(\n  [fpsState],\n  (state) => state.session\n);\n\nexport const selectIsSessionAvailable = createSelector(\n  [selectSession],\n  (session) => (session.sessionId ? true : false)\n);\n\nexport const selectSessionTime = createSelector(\n  [fpsState],\n  (state) => state.sessionTime\n);\n\nexport const selectDeviceId = createSelector(\n  [selectSession],\n  (state) => state.deviceId\n);\n","import {\n  RESET_SESSION,\n  SET_CHECKED,\n  SET_CPU,\n  SET_DEVICE,\n  SET_DEVICE_PROP,\n  SET_ERROR,\n  SET_FPS,\n  SET_MEM,\n  SET_PACKAGE_NAME,\n  SET_SESSION,\n  TOGGLE_RECORDING,\n  SET_SESSION_TIME,\n  SET_FOLDERS,\n  SET_PATH,\n} from './types';\n\nexport const setDevice = (deviceStatus) => ({\n  type: SET_DEVICE,\n  payload: deviceStatus,\n});\n\nexport const setPackageName = (package_name) => ({\n  type: SET_PACKAGE_NAME,\n  payload: package_name,\n});\n\nexport const setDeviceProp = (deviceInfo) => ({\n  type: SET_DEVICE_PROP,\n  payload: deviceInfo,\n});\n\nexport const toggleRecording = (val) => ({\n  type: TOGGLE_RECORDING,\n  payload: val,\n});\n\nexport const setError = (error) => ({\n  type: SET_ERROR,\n  payload: error,\n});\n\nexport const setFPS = (val) => ({\n  type: SET_FPS,\n  payload: val,\n});\n\nexport const setCPU = (val) => ({\n  type: SET_CPU,\n  payload: val,\n});\n\nexport const setMEM = (val) => ({\n  type: SET_MEM,\n  payload: val,\n});\n\nexport const setSession = (val) => ({\n  type: SET_SESSION,\n  payload: val,\n});\n\nexport const setChecked = (mod, value) => ({\n  type: SET_CHECKED,\n  mod,\n  val: value,\n});\n\nexport const resetSession = () => ({\n  type: RESET_SESSION,\n});\n\nexport const setSessionTime = (value) => ({\n  type: SET_SESSION_TIME,\n  payload: value,\n});\n\nexport const setFolders = (val) => ({\n  type: SET_FOLDERS,\n  payload: val,\n});\n\nexport const setPath = (val) => ({\n  type: SET_PATH,\n  payload: val,\n});\n","import { firebaseConfig } from './config';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport {\n  collection,\n  addDoc,\n  getDocs,\n  doc,\n  setDoc,\n  getDoc,\n  deleteDoc,\n} from 'firebase/firestore';\n\ninitializeApp(firebaseConfig);\nexport const db = getFirestore();\n\n// Add the document to the collection\nexport const addDocument = async (path, data) => {\n  try {\n    const docRef = await addDoc(collection(db, path), data);\n    console.log('Document written with ID: ', docRef.id);\n  } catch (e) {\n    console.error('Error adding document: ', e);\n  }\n};\n\n// Get the all the exisiting documents from the collection\nexport const getAllDocuments = async (path) => {\n  return await getDocs(collection(db, ...path));\n  // querySnapshot.forEach((doc) => {\n  //   console.log(`${doc.id} => ${doc.data()}`);\n  // });\n};\n\nexport const getAllCollections = async (path) => {\n  // getDoc(db, ...path);\n};\n\n// Add the data to the new/existing document in collection.\n//If the document does not exist, it will be created. If the document does\n// exist, its contents will be overwritten with the newly provided data.\nexport const addDocumentToCollection = async (path, data) => {\n  let pathString = '';\n  if (path) {\n    pathString = path.reduce((acc, item) => acc + '/' + item);\n  }\n  return await setDoc(doc(db, pathString), data);\n};\n\n// Delete document from the collection\nexport const deleteDocument = async (collectionName, documentName) => {\n  await deleteDoc(doc(db, collectionName, documentName));\n};\n\nexport const getDocument = async (path) => {\n  const docRef = doc(db, ...path);\n  return await getDoc(docRef);\n};\n\nexport const updateDocument = async (path, data) => {\n  await setDoc(doc(db, ...path), data);\n};\n\nexport let isDocumentExists = async (path) => {\n  const docRef = doc(db, ...path);\n  const docSnap = await getDoc(docRef);\n  return docSnap.exists();\n};\n\nexport let isCollectionExists = async (path) => {\n  const collectionRef = collection(db, ...path);\n  console.log(collectionRef);\n};\n","// Import the functions you need from the SDKs you need\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyAMKzUfVj94CM5g2jnrEdDFwrfsUNg_j5M',\n  authDomain: 'perfmonweb-9c2ae.firebaseapp.com',\n  projectId: 'perfmonweb-9c2ae',\n  storageBucket: 'perfmonweb-9c2ae.appspot.com',\n  messagingSenderId: '683361711021',\n  appId: '1:683361711021:web:804367f955b2b22462a724',\n  measurementId: 'G-D4GLX0FF2K',\n};\n","import React from 'react';\nimport {\n  AllSessions,\n  Item,\n  Logo,\n  MainContainer,\n  SessionTab,\n  Status,\n  ToolTip,\n} from './header.styles';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport {\n  selectDeviceBoard,\n  selectDevicePlatform,\n  selectError,\n  selectIp,\n  selectSession,\n  selectStatus,\n} from '../../redux/reducers/fps/fps.selector';\nimport { setDevice, setError, setSession } from '../../redux/actions';\nimport { v1 } from 'uuid';\nimport { addDocumentToCollection, isDocumentExists } from '../../firebase/api';\n\nclass HeaderComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.connectSession = this.connectSession.bind(this);\n  }\n\n  componentDidMount() {\n    const apiUrl = 'http://127.0.0.1:5002/getdevices';\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((data) => this.props.setDevice(data));\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  connectSession(event) {\n    const { deviceBoard, devicePlatform, status } = this.props;\n    const inputProvided = this.state.value.trim();\n    const sessionId = `${inputProvided}_${new Date().getTime()}`.trim();\n    const testId = v1();\n    const documentName =\n      `${deviceBoard.trim()}_${devicePlatform.trim()}`.trim();\n    if (status !== 'device') {\n      alert('Please connect to the device using adb');\n    } else {\n      if (this.props.error) {\n        alert('Please connect to the device using adb');\n      } else {\n        isDocumentExists(['Google', inputProvided]).then((isExists) => {\n          // if the document exists, add/overwrite the data.\n          if (isExists) {\n            // Adding the device info to the session.\n            addDocumentToCollection(\n              ['Google', inputProvided, 'Devices', documentName],\n              {\n                sessionId: inputProvided,\n                testId,\n                deviceId: documentName,\n              }\n            );\n            this.props.setSession({\n              sessionId: inputProvided,\n              testId,\n              deviceId: documentName,\n            });\n          } else {\n            // Creating a new session with the device info\n            addDocumentToCollection(['Google', sessionId], {\n              sessionId,\n              testId,\n            }).then(() => {\n              addDocumentToCollection(\n                ['Google', sessionId, 'Devices', documentName],\n                {\n                  deviceId: documentName,\n                }\n              );\n            });\n            this.props.setSession({\n              sessionId,\n              testId,\n              deviceId: documentName,\n            });\n          }\n        });\n\n        event.preventDefault();\n      }\n    }\n  }\n\n  render() {\n    const { ip, status, session } = this.props;\n    return (\n      <div>\n        <MainContainer>\n          <Logo>\n            <div className='centered'>\n              <span>G</span>\n              <span>o</span>\n              <span>o</span>\n              <span>g</span>\n              <span>l</span>\n              <span>e</span>\n            </div>\n          </Logo>\n          <Status light={status}>\n            <div className='st'>\n              {status === 'device'\n                ? 'connected'\n                : status === ''\n                ? 'No device connected'\n                : status}\n            </div>\n            <div className='light'></div>\n            <div className='ip'>{ip}</div>\n          </Status>\n          {!session.sessionId ? (\n            <SessionTab>\n              <div className='.input'>\n                <form>\n                  <input\n                    type='text'\n                    name='session'\n                    placeholder='Session Name (Opt.)'\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                  />\n                  <ToolTip onClick={this.connectSession}>\n                    <i\n                      className='sign-in icon'\n                      style={{ color: '#179C52' }}></i>\n                    <span className='tooltip'>Connect to the session</span>\n                  </ToolTip>\n                </form>\n              </div>\n            </SessionTab>\n          ) : (\n            <Status light='device' style={{ left: '70%' }}>\n              <div className='st'>connected to '{session.sessionId}'</div>\n              <div\n                className='copyIcon press'\n                onClick={() => {\n                  navigator.clipboard.writeText(session.sessionId);\n                }}>\n                <i className='small copy outline icon'></i>\n              </div>\n              <div className='ip'>\n                <ToolTip onClick={() => this.props.setSession({})}>\n                  <i className='close icon' style={{ color: '#FF3E30CC' }}></i>\n                  <span className='tooltip'>Close the session</span>\n                </ToolTip>\n              </div>\n            </Status>\n          )}\n          <AllSessions\n            to='/web/0/Google'\n            onClick={() => this.props.setError('')}>\n            <label>All Sessions</label>\n          </AllSessions>\n          <Item to='/web'>\n            <div className='centered'>\n              <span>P</span>\n              <span>e</span>\n              <span>r</span>\n              <span>f</span>\n              <span>M</span>\n              <span>o</span>\n              <span>n</span>\n            </div>\n          </Item>\n        </MainContainer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  ip: selectIp,\n  status: selectStatus,\n  session: selectSession,\n  error: selectError,\n  deviceBoard: selectDeviceBoard,\n  devicePlatform: selectDevicePlatform,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setDevice: (val) => dispatch(setDevice(val)),\n  setSession: (val) => dispatch(setSession(val)),\n  setError: (val) => dispatch(setError(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent);\n","import styled, { keyframes } from 'styled-components';\n\nexport const AppContainer = styled.div``;\nexport const MetricContainer = styled.div`\n  display: flex;\n`;\nexport const SubContainer = styled.div`\n  width: 70%;\n`;\n\nconst slideText = keyframes`\n  from { width: 0; } \n`;\n\nconst blinkCaret = keyframes`\n  50% { border-color: transparent; }\n`;\n\nexport const AnimatedPet = styled.div`\n  position: fixed;\n  width: 200px;\n  height: 50px;\n  bottom: 60px;\n  left: 4px;\n  .pet {\n    .icon {\n      position: absolute;\n      bottom: -20px;\n      left: 0;\n      width: 20px;\n      height: 20px;\n      border: 1px solid black;\n      border-radius: 20px;\n    }\n    label {\n      color: black;\n      display: block;\n      border-right: 0.1em solid black;\n      box-shadow: inset 1px 1px 4px 2px black;\n      padding: 10px;\n      width: ${(props) => `calc(0.40em * ${props.length})`};\n      width: ${(props) => `${props.length}ch`};\n      white-space: nowrap;\n      overflow: hidden;\n      animation: ${slideText} 2s steps(200, end),\n        ${blinkCaret} 0.5s step-end infinite alternate;\n\n      ::before {\n        content: '';\n        width: 15px;\n        height: 10px;\n        border: 1px solid black;\n        background: black;\n        bottom: 2px;\n        left: 1px;\n        position: absolute;\n        clip-path: polygon(100% 0, 0 0, 50% 100%);\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n  background: #3b7aee;\n  width: 100vw;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n`;\n\nexport const StyledInputContainer = styled.div`\n  display: flex;\n  position: relative;\n  width: 80%;\n  height: 40px;\n  margin: auto;\n  border-radius: 10px;\n  border: 1px solid black;\n  background: #eff5ff;\n  :hover {\n    background: white;\n  }\n  .dropdown {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n  }\n  .search {\n    position: absolute;\n    top: 25%;\n    left: 10px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  position: absolute;\n  width: 85%;\n  left: 3%;\n  border: 0;\n  height: 100%;\n  -webkit-appearance: none;\n  background: #eff5ff;\n  :hover {\n    background: white;\n  }\n  :focus {\n    border: 0;\n    outline: 0;\n  }\n`;\n\nexport const StyledDropDownElements = styled.div`\n  border: 1px solid black;\n  border-radius: 10px;\n  transform-style: preserve-3d;\n  width: 80%;\n  margin: auto;\n  color: white;\n  .element {\n    margin: 1px 0;\n    padding: 5px 40px;\n\n    :hover {\n      cursor: pointer;\n      background: #d6d2d0;\n      border-radius: 10px;\n      color: black;\n    }\n  }\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  position: relative;\n  margin: 10px auto;\n  justify-content: space-evenly;\n  .labels {\n    display: flex;\n    justify-content: space-evenly;\n    width: 50%;\n  }\n  /* display: flex;\n  flex-flow: row wrap;\n  border: 1px solid black;\n  border-radius: 20px;\n  padding: 10px 20px;\n  margin-top: 10px;\n  flex-direction: column;\n  width: 100%;\n  .row {\n    display: flex;\n    justify-content: space-evenly;\n    width: 100%;\n  }\n  .col {\n    width: 100%;\n    display: flex;\n    .subCol {\n      width: 100%;\n    }\n  } */\n`;\n\nexport const DebugSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  .debug {\n    width: 70%;\n    margin-left: 10px;\n    margin-bottom: 5px;\n    font-style: italic;\n    font-size: small;\n    color: #ea4345;\n    border-radius: 10px;\n    padding: 3px;\n    background: white;\n  }\n  .buttons {\n    .button {\n      .minutes {\n        font-size: 1.1em;\n        color: white;\n      }\n      .seconds {\n        font-size: 1.1em;\n        margin: 0 5px;\n      }\n      .ms {\n        font-size: 0.7em;\n      }\n    }\n  }\n`;\n\nexport const ModuleSelection = styled.div`\n  width: 50%;\n  display: flex;\n  justify-content: space-evenly;\n  padding: 0.5em;\n\n  .warn {\n    border-radius: 20px;\n    background: #fbbc05;\n    padding: 0 5px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  resetSession,\n  setChecked,\n  setDeviceProp,\n  setError,\n  setPackageName,\n  setSessionTime,\n  toggleRecording,\n} from '../../redux/actions';\nimport {\n  selectDeviceBoard,\n  selectDeviceName,\n  selectDevicePlatform,\n  selectError,\n  selectisCPUChecked,\n  selectisFPSChecked,\n  selectisMEMChecked,\n  selectIsRecording,\n  selectPackage,\n  selectStatus,\n} from '../../redux/reducers/fps/fps.selector';\nimport {\n  DebugSection,\n  Details,\n  MainContainer,\n  StyledDropDownElements,\n  StyledInput,\n  StyledInputContainer,\n} from './basic.styles';\n\nfunction BasicComponent({\n  setPackage,\n  selectPackage,\n  selectStatus,\n  setDeviceProp,\n  selectDeviceName,\n  selectDevicePlatform,\n  selectDeviceBoard,\n  toggleRecording,\n  selectIsRecording,\n  setError,\n  resetValues,\n  selectError,\n  setSessionTime,\n  selectisFPSChecked,\n  selectisCPUChecked,\n  selectisMEMChecked,\n}) {\n  const [packages, setPackages] = useState([]);\n  const [term, setTerm] = useState('');\n  const [debouncedTerm, setDebouncedTerm] = useState(term);\n  const [time, setTime] = useState(0);\n  const [startTimer, setStartTimer] = useState(false);\n\n  useEffect(() => {\n    const apiUrl = `http://127.0.0.1:5002/getdeviceprop`;\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((data) => setDeviceProp(data));\n    if (selectStatus !== 'device')\n      setError('Please check your adb connection.');\n    else setError('');\n  }, [setDeviceProp, selectStatus, setError]);\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedTerm(term);\n    }, 500);\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [term]);\n\n  useEffect(() => {\n    if (selectPackage === debouncedTerm) {\n      setPackages([]);\n    } else {\n      if (debouncedTerm) {\n        const apiUrl = `http://127.0.0.1:5002/packages/${debouncedTerm}`;\n        fetch(apiUrl, { method: 'POST' })\n          .then((response) => response.json())\n          .then((data) => setPackages(data));\n      } else {\n        setPackages([]);\n      }\n    }\n  }, [selectPackage, debouncedTerm]);\n\n  useEffect(() => {\n    let interval = null;\n    if (startTimer) {\n      interval = setInterval(() => {\n        setTime(time + 100);\n        setSessionTime(Math.floor(time / 1000));\n      }, 100);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [startTimer, setSessionTime, time]);\n\n  const onTermChange = (e) => {\n    e.stopPropagation();\n    if (e.target.value) {\n      setTerm(e.target.value);\n    } else {\n      setTerm('');\n      setPackages([]);\n    }\n  };\n\n  const setPackageTerm = (val) => {\n    setDebouncedTerm('');\n    setTerm(val);\n    setPackage(val);\n    setDebouncedTerm('');\n    setPackages([]);\n  };\n\n  const startButtonClassName = `ui positive button ${\n    selectPackage && !selectIsRecording ? '' : 'disabled'\n  }`;\n\n  const stopButtonClassName = `ui negative button ${\n    selectPackage && selectIsRecording ? '' : 'disabled'\n  }`;\n\n  const startRecording = () => {\n    if (!selectisFPSChecked && !selectisCPUChecked && !selectisMEMChecked)\n      setError('Please select metrics to measure from Analytics panel');\n    else {\n      if (!selectPackage) setError('Please select Package Name.');\n      else if (!term) {\n        setTerm(selectPackage);\n        toggleRecording(true);\n        setError('');\n        setStartTimer(true);\n      } else {\n        toggleRecording(true);\n        setError('');\n        setStartTimer(true);\n      }\n    }\n  };\n\n  const stopRecording = () => {\n    toggleRecording(false);\n    setError('');\n    setStartTimer(false);\n  };\n\n  const resetRecording = () => {\n    toggleRecording(false);\n    setError('');\n    setStartTimer(false);\n    setTime(0);\n    resetValues();\n  };\n  const getSeconds = (ms) => parseInt(Math.ceil(ms / 1000)) - 1;\n\n  const trimSeconds = (ms) =>\n    (parseInt(getSeconds(ms)) % 60).toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    });\n\n  const getMilliSeconds = (ms) =>\n    parseInt((ms % 1000) / 10).toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    });\n\n  const getMinutes = (ms) => {\n    let sec = getSeconds(ms);\n    return parseInt(parseInt(sec) / 60).toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    });\n  };\n\n  return (\n    <MainContainer>\n      <StyledInputContainer>\n        <i className='search icon'></i>\n        <StyledInput\n          type='text'\n          name='package'\n          placeholder='select the package name'\n          value={term}\n          onChange={(e) => onTermChange(e)}\n        />\n        <i className='dropdown icon'></i>\n      </StyledInputContainer>\n      {packages.length === 0 ? (\n        <React.Fragment></React.Fragment>\n      ) : (\n        <StyledDropDownElements>\n          {packages.map((val, idx) => (\n            <div\n              className='element'\n              key={idx}\n              onClick={(e) => {\n                e.stopPropagation();\n                setPackageTerm(val);\n              }}>\n              {val}\n            </div>\n          ))}\n        </StyledDropDownElements>\n      )}\n      <Details>\n        <div className='labels'>\n          {selectDeviceName !== 'undefined' ? (\n            <div className='ui circular label'>{selectDeviceName}</div>\n          ) : (\n            <div className='ui circular label'>Device Name</div>\n          )}\n          {selectDevicePlatform !== 'undefined' ? (\n            <div className='ui circular label'>{selectDevicePlatform}</div>\n          ) : (\n            <div className='ui circular label'>Device Platform</div>\n          )}\n          <div className='ui circular label'>\n            {selectPackage || 'Package Name'}\n          </div>\n          {selectDeviceBoard !== 'undefined' ? (\n            <div className='ui circular label'>{selectDeviceBoard}</div>\n          ) : (\n            <div className='ui circular label'>Device Board</div>\n          )}\n        </div>\n      </Details>\n      <DebugSection>\n        <div className='debug'>\n          <label>Debug: </label>\n          <label>\n            {selectError\n              ? selectError\n              : selectStatus\n              ? selectPackage\n                ? ''\n                : 'Please select package name.'\n              : 'Please check your adb connection.'}\n          </label>\n        </div>\n        <div className='buttons'>\n          {!selectIsRecording ? (\n            time ? (\n              <button\n                className={startButtonClassName}\n                onClick={() => resetRecording()}>\n                Reset\n              </button>\n            ) : (\n              <button\n                className={startButtonClassName}\n                onClick={() => startRecording()}>\n                Start Recording\n              </button>\n            )\n          ) : (\n            <button className='ui positive button disabled'>\n              <span className='minutes'>{getMinutes(time)}m</span>\n              <span className='seconds'>{trimSeconds(time)}s</span>\n              <span className='ms'>{getMilliSeconds(time)}</span>\n            </button>\n          )}\n          <button\n            className={stopButtonClassName}\n            onClick={() => stopRecording()}>\n            Stop Recording\n          </button>\n        </div>\n      </DebugSection>\n    </MainContainer>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  selectPackage,\n  selectStatus,\n  selectDeviceName,\n  selectDevicePlatform,\n  selectDeviceBoard,\n  selectIsRecording,\n  selectError,\n  selectisFPSChecked,\n  selectisCPUChecked,\n  selectisMEMChecked,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPackage: (val) => dispatch(setPackageName(val)),\n  setDeviceProp: (val) => dispatch(setDeviceProp(val)),\n  toggleRecording: (val) => dispatch(toggleRecording(val)),\n  setError: (err) => dispatch(setError(err)),\n  setChecked: (mod, val) => dispatch(setChecked(mod, val)),\n  resetValues: () => dispatch(resetSession()),\n  setSessionTime: (val) => dispatch(setSessionTime(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicComponent);\n","import React from 'react';\nimport './metric.styles.scss';\nimport { Chart } from 'react-google-charts';\n\nclass MetricComponent extends React.Component {\n  render() {\n    return (\n      <div className='fps-container'>\n        <div className='lineChart'>\n          {this.props.data.length > 1 ? (\n            <Chart\n              chartType='LineChart'\n              data={this.props.data.map((val) => val)}\n              width='100%'\n              height='400px'\n              legendToggle\n              options={{\n                hAxis: {\n                  title: 'Iterations',\n                },\n                vAxis: {\n                  title: `${this.props.name.join('')}`,\n                },\n              }}\n            />\n          ) : (\n            <div className='display'>\n              <div className='centered'>\n                {this.props.name.map((a, idx) => (\n                  <span key={idx}>{a}</span>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MetricComponent;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { setError, setCPU, toggleRecording } from '../../redux/actions';\nimport {\n  selectCPUValues,\n  selectCurrentCPU,\n  selectIsRecording,\n  selectPackage,\n} from '../../redux/reducers/fps/fps.selector';\nimport MetricComponent from '../metric/metric.component';\n\nclass CPUComponent extends Component {\n  interval = null;\n  i = 0;\n  componentDidUpdate() {\n    // Update with CPU related data\n    const apiUrl = `http://127.0.0.1:5002/cpu/${this.props.selectedPackage}`;\n\n    if (this.props.selectIsRecording) {\n      this.interval = setTimeout(() => {\n        fetch(apiUrl).then((response) => {\n          const contentType = response.headers.get('content-type');\n          if (contentType && contentType.indexOf('application/json') !== -1) {\n            return response.json().then((data) => {\n              // process JSON data\n              this.props.setCPU({\n                app: parseFloat(data.app).toFixed(2),\n                device: parseFloat(data.device).toFixed(2),\n                duration: this.i++,\n              });\n            });\n          } else {\n            return response.text().then((text) => {\n              // process error from server\n              this.props.setError(text);\n              this.props.toggleRecording(false);\n            });\n          }\n        });\n      }, 800);\n    }\n  }\n  render() {\n    let data = [['Time(sec)', 'App Usage', 'Device Usage']];\n    if (this.props.selectCPUValues)\n      this.props.selectCPUValues.map((val) =>\n        data.push([\n          parseInt(val.duration),\n          parseFloat(val.app),\n          parseFloat(val.device),\n        ])\n      );\n\n    return (\n      <MetricComponent\n        data={data}\n        name={['C', 'P', 'U']}\n        currentMetricValue={0}\n        currentMetricDuration={\n          this.props.selectCurrentCPU?.duration || 0\n        }></MetricComponent>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  selectIsRecording: selectIsRecording,\n  selectedPackage: selectPackage,\n  selectCurrentCPU: selectCurrentCPU,\n  selectCPUValues: selectCPUValues,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setError: (err) => dispatch(setError(err)),\n  toggleRecording: (val) => dispatch(toggleRecording(val)),\n  setCPU: (val) => dispatch(setCPU(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CPUComponent);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { setError, setFPS, toggleRecording } from '../../redux/actions';\nimport {\n  selectCurrentFPS,\n  selectFPSValues,\n  selectIsRecording,\n  selectPackage,\n} from '../../redux/reducers/fps/fps.selector';\nimport MetricComponent from '../metric/metric.component';\n\nclass FPSComponent extends Component {\n  interval = null;\n  i = 0;\n  componentDidUpdate() {\n    const apiUrl = `http://127.0.0.1:5002/fps/${this.props.selectedPackage}`;\n\n    if (this.props.selectIsRecording) {\n      this.interval = setTimeout(() => {\n        fetch(apiUrl).then((response) => {\n          const contentType = response.headers.get('content-type');\n          if (contentType && contentType.indexOf('application/json') !== -1) {\n            return response.json().then((data) => {\n              // process JSON data\n              this.props.setFPS({\n                value: parseFloat(data).toFixed(2),\n                duration: this.i++,\n              });\n            });\n          } else {\n            return response.text().then((text) => {\n              // process error from server\n              this.props.setError(text);\n              this.props.toggleRecording(false);\n            });\n          }\n        });\n      }, 900);\n    }\n  }\n  render() {\n    let data = [['Time(sec)', 'FPS']];\n    this.props.selectFPSValues.map((val) =>\n      data.push([parseFloat(val.duration), parseInt(val.value)])\n    );\n    return (\n      <MetricComponent data={data} name={['F', 'P', 'S']}></MetricComponent>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  selectIsRecording: selectIsRecording,\n  selectedPackage: selectPackage,\n  selectCurrentFPS: selectCurrentFPS,\n  selectFPSValues: selectFPSValues,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setError: (err) => dispatch(setError(err)),\n  toggleRecording: (val) => dispatch(toggleRecording(val)),\n  setFPS: (val) => dispatch(setFPS(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FPSComponent);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { setError, toggleRecording, setMEM } from '../../redux/actions';\nimport {\n  selectCurrentMEM,\n  selectIsRecording,\n  selectMEMValues,\n  selectPackage,\n} from '../../redux/reducers/fps/fps.selector';\nimport MetricComponent from '../metric/metric.component';\n\nclass MemoryComponent extends Component {\n  interval = null;\n  i = 0;\n  componentDidUpdate() {\n    // Update with CPU related data\n    const apiUrl = `http://127.0.0.1:5002/mem/${this.props.selectedPackage}`;\n\n    if (this.props.selectIsRecording) {\n      this.interval = setTimeout(() => {\n        fetch(apiUrl).then((response) => {\n          const contentType = response.headers.get('content-type');\n          if (contentType && contentType.indexOf('application/json') !== -1) {\n            return response.json().then((data) => {\n              // process JSON data\n              this.props.setMEM({\n                app: parseFloat(data.app).toFixed(2),\n                device: parseFloat(data.device).toFixed(2),\n                duration: this.i++,\n              });\n            });\n          } else {\n            return response.text().then((text) => {\n              // process error from server\n              this.props.setError(text);\n              this.props.toggleRecording(false);\n            });\n          }\n        });\n      }, 800);\n    }\n  }\n  render() {\n    let data = [['Time(sec)', 'App Usage', 'Device Usage']];\n    if (this.props.selectMEMValues)\n      this.props.selectMEMValues.map((val) =>\n        data.push([\n          parseInt(val.duration),\n          parseFloat(val.app),\n          parseFloat(val.device),\n        ])\n      );\n\n    return (\n      <MetricComponent\n        data={data}\n        name={['M', 'E', 'M', 'O', 'R', 'Y']}\n        currentMetricValue={0}\n        currentMetricDuration={\n          this.props.selectCurrentMEM?.duration || 0\n        }></MetricComponent>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  selectIsRecording: selectIsRecording,\n  selectedPackage: selectPackage,\n  selectCurrentMEM: selectCurrentMEM,\n  selectMEMValues: selectMEMValues,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setError: (err) => dispatch(setError(err)),\n  toggleRecording: (val) => dispatch(toggleRecording(val)),\n  setMEM: (val) => dispatch(setMEM(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MemoryComponent);\n","import styled from 'styled-components';\n\nexport const SidePanelContainer = styled.div`\n  width: 30%;\n  background: #122365;\n\n  .heading {\n    color: white;\n    margin: 15px 0;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    .head {\n      font-size: 2em;\n    }\n\n    .stopWatch {\n      display: block;\n      position: relative;\n      height: 25px;\n      width: 25px;\n      border: 1px solid white;\n      border-radius: 50%;\n      background: white;\n      margin-right: 5px;\n      .push {\n        position: absolute;\n        height: 5px;\n        width: 3px;\n        background: white;\n        left: 10px;\n        top: -5px;\n        ::before {\n          content: '';\n          display: block;\n          background: white;\n          height: 2px;\n          width: 10px;\n          transform: translateX(-3px);\n        }\n      }\n      .side {\n        position: absolute;\n        height: 5px;\n        width: 3px;\n        background: white;\n        left: 20px;\n        top: 0px;\n        transform: rotateZ(45deg);\n      }\n      .full-tick {\n        transform: ${(props) => `rotateZ(${props.time * 6}deg)`};\n        position: absolute;\n        top: 0px;\n        left: 10.5px;\n        width: 2px;\n        height: 97.5%;\n        background: linear-gradient(\n          to bottom,\n          white 10%,\n          black 12%,\n          black 50%,\n          white 50%,\n          white 100%\n        );\n      }\n    }\n  }\n\n  ::before {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: 0px;\n    height: 50%;\n    width: 40%;\n    z-index: 0;\n    background: linear-gradient(#12236511, #9198e511);\n    clip-path: polygon(0 0, 100% 100%, 0% 100%);\n  }\n  ::after {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: 1px;\n    height: 100%;\n    width: 100%;\n    z-index: 0;\n    background: linear-gradient(#12236511, #9198e511);\n    clip-path: polygon(0% 100%, 100% 0%, 100% 100%);\n  }\n`;\n\nexport const Panel = styled.div`\n  display: flex;\n  flex-direction: column;\n  z-index: 1;\n  margin: 2rem 0px;\n`;\n\nexport const Pane = styled.div`\n  border-bottom: 1px solid grey;\n  z-index: 1;\n  :first-child {\n    border-top: 1px solid grey;\n  }\n  .cloud {\n    color: white;\n    margin: 1em;\n    text-align: center;\n    :hover {\n      cursor: pointer;\n    }\n    * {\n      :hover {\n        cursor: pointer;\n      }\n    }\n  }\n  .parent {\n    display: flex;\n    padding: 20px 0px;\n    .labels {\n      display: flex;\n      flex-direction: column;\n      width: 90%;\n    }\n    .checkbox {\n      z-index: 99;\n    }\n    .head {\n      padding: 0px 20px;\n      font-weight: bolder;\n      color: white;\n      :hover {\n        cursor: pointer;\n      }\n    }\n    .sub {\n      padding: 0px 20px;\n      color: grey;\n      :hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  .info {\n    height: 20em;\n    width: 100%;\n    background: #44579f77;\n    margin-bottom: 0;\n    border-top: 1px solid grey;\n    color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    .row {\n      display: flex;\n      justify-content: space-between;\n      width: 60%;\n      margin: 0 10%;\n      .col {\n        width: 100%;\n        text-align: right;\n      }\n    }\n    :hover {\n      background: #44579f77;\n    }\n  }\n\n  :hover {\n    cursor: pointer;\n    background: #9198e511;\n  }\n`;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  selectCPUValues,\n  selectCurrentCPU,\n  selectCurrentFPS,\n  selectCurrentMEM,\n  selectFPSValues,\n  selectisCPUChecked,\n  selectisFPSChecked,\n  selectisMEMChecked,\n  selectMEMValues,\n  selectSessionTime,\n  selectIsRecording,\n  selectSession,\n  selectIsSessionAvailable,\n  selectPackage,\n  selectDeviceProp,\n} from '../../redux/reducers/fps/fps.selector';\nimport { setChecked } from '../../redux/actions';\nimport { Pane, Panel, SidePanelContainer } from './side-panel.styles';\nimport {\n  getAverageAppUsage,\n  getAverageDeviceUsage,\n  getAverageFPS,\n} from '../../redux/reducers/fps/fps.utils';\nimport { updateDocument } from '../../firebase/api';\n\nconst SidePanel = ({\n  isFPSChecked,\n  isCPUChecked,\n  isMEMChecked,\n  setChecked,\n  sessionTime,\n  currentFPS,\n  currentCPU,\n  currentMEM,\n  FPSValues,\n  CPUValues,\n  MEMValues,\n  isRecording,\n  isSessionAvailable,\n  session,\n  packageName,\n  deviceProps,\n}) => {\n  const [fpsOpen, setIsFPSOpen] = useState(false);\n  const [cpuOpen, setIsCPUOpen] = useState(false);\n  const [memOpen, setIsMEMOpen] = useState(false);\n  const [uploadStatus, setUploadStatus] = useState(false);\n  const [msg, setMsg] = useState('');\n\n  const updateDocumentToFirebase = () => {\n    const { sessionId, deviceId } = session;\n    let data = {\n      FPSValues,\n      CPUValues,\n      MEMValues,\n      sessionTime,\n      deviceProps,\n    };\n    updateDocument(\n      ['Google', sessionId, 'Devices', deviceId, 'Games', packageName],\n      data\n    )\n      .then(() => {\n        setMsg('Sucessfully synced to cloud');\n        setUploadStatus(true);\n      })\n      .catch((err) => {\n        setMsg(err);\n        setUploadStatus(true);\n      });\n  };\n  return (\n    <SidePanelContainer time={sessionTime}>\n      <div className='heading'>\n        {/* <i class='stopwatch icon'></i> */}\n        <div className='stopWatch'>\n          <div className='full-tick'></div>\n          <div className='push'></div>\n          <div className='side'></div>\n        </div>\n        <label className='head'>Analytics</label>\n      </div>\n      <Panel>\n        <Pane onClick={() => setIsFPSOpen(!fpsOpen)}>\n          <div className='parent'>\n            <div className='labels'>\n              <label className='head'>FPS Panel</label>\n              <label className='sub'>Frames per second</label>\n            </div>\n            <div\n              className='ui checkbox'\n              onClick={(e) => {\n                e.stopPropagation();\n              }}>\n              <input\n                type='checkbox'\n                checked={isFPSChecked}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  setChecked('fpsChecked', e.target.checked);\n                }}\n                disabled={isRecording}\n              />\n              <label></label>\n            </div>\n          </div>\n          {fpsOpen ? (\n            <div className='info' onClick={(e) => e.stopPropagation()}>\n              <div className='row'>\n                <div className='col'>Iterations</div>\n                <div className='col'>{FPSValues?.length || 0}</div>\n              </div>\n              <div className='row'>\n                <div className='col'>Current FPS</div>\n                <div className='col'>{currentFPS?.value || 0}</div>\n              </div>\n              <div className='row'>\n                <div className='col'>Average</div>\n                <div className='col'>{getAverageFPS(FPSValues)}</div>\n              </div>\n            </div>\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </Pane>\n        <Pane\n          onClick={(e) => {\n            e.stopPropagation();\n            setIsCPUOpen(!cpuOpen);\n          }}>\n          <div className='parent'>\n            <div className='labels'>\n              <label className='head'>CPU Panel</label>\n              <label className='sub'>\n                Measure CPU usages for the game and device.\n              </label>\n            </div>\n\n            <div className='ui checkbox' onClick={(e) => e.stopPropagation()}>\n              <input\n                type='checkbox'\n                checked={isCPUChecked}\n                onChange={(e) => {\n                  setChecked('cpuChecked', e.target.checked);\n                }}\n                disabled={isRecording}\n              />\n              <label></label>\n            </div>\n          </div>\n          {cpuOpen ? (\n            <div className='info' onClick={(e) => e.stopPropagation()}>\n              <div className='row'>\n                <div className='col'>Iterations</div>\n                <div className='col'>{CPUValues?.length || 0}</div>\n              </div>\n              <div className='row'>\n                <div className='col'>Current App usage</div>\n                <div className='col'>{currentCPU?.app || 0}</div>\n              </div>\n              <div className='row'>\n                <div className='col'>Current Device usage</div>\n                <div className='col'>{currentCPU?.device || 0}</div>\n              </div>\n              <div className='row'>\n                <div className='col'>Average App Usage</div>\n                <div className='col'>{getAverageAppUsage(CPUValues)}</div>\n              </div>\n              <div className='row'>\n                <div className='col'>Average Device Usage</div>\n                <div className='col'>{getAverageDeviceUsage(CPUValues)}</div>\n              </div>\n            </div>\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </Pane>\n        <Pane\n          onClick={(e) => {\n            setIsMEMOpen(!memOpen);\n          }}>\n          <div className='parent'>\n            <div className='labels'>\n              <label className='head'>Memory Panel</label>\n              <label className='sub'>\n                Measures memory usages for game and device.\n              </label>\n            </div>\n            <div className='ui checkbox' onClick={(e) => e.stopPropagation()}>\n              <input\n                type='checkbox'\n                checked={isMEMChecked}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  setChecked('memChecked', e.target.checked);\n                }}\n                disabled={isRecording}\n              />\n              <label></label>\n            </div>\n          </div>\n          {memOpen ? (\n            <div className='info' onClick={(e) => e.stopPropagation()}>\n              <div className='row'>\n                <div className='col'>Iterations</div>\n                <div className='col'>{MEMValues?.length || 0}</div>\n              </div>\n              <div className='row'>\n                <div className='col'>Current App usage</div>\n                <div className='col'>{currentMEM?.app || 0}</div>\n              </div>\n              <div className='row'>\n                <div className='col'>Current Device usage</div>\n                <div className='col'>{currentMEM?.device || 0}</div>\n              </div>\n\n              <div className='row'>\n                <div className='col'>Average App Usage</div>\n                <div className='col'>{getAverageAppUsage(MEMValues)}</div>\n              </div>\n              <div className='row'>\n                <div className='col'>Average Device Usage</div>\n                <div className='col'>{getAverageDeviceUsage(MEMValues)}</div>\n              </div>\n            </div>\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </Pane>\n        {!isRecording && isSessionAvailable ? (\n          <Pane\n            onClick={() => {\n              updateDocumentToFirebase();\n            }}>\n            <div className='cloud'>\n              <i class='cloud upload icon'></i>\n              <label>{uploadStatus ? msg : 'Sync to session'}</label>\n            </div>\n          </Pane>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n      </Panel>\n    </SidePanelContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isFPSChecked: selectisFPSChecked,\n  isCPUChecked: selectisCPUChecked,\n  isMEMChecked: selectisMEMChecked,\n  sessionTime: selectSessionTime,\n  currentFPS: selectCurrentFPS,\n  currentCPU: selectCurrentCPU,\n  currentMEM: selectCurrentMEM,\n  FPSValues: selectFPSValues,\n  CPUValues: selectCPUValues,\n  MEMValues: selectMEMValues,\n  isRecording: selectIsRecording,\n  isSessionAvailable: selectIsSessionAvailable,\n  session: selectSession,\n  packageName: selectPackage,\n  deviceProps: selectDeviceProp,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setChecked: (mod, val) => dispatch(setChecked(mod, val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidePanel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { MetricContainer, SubContainer } from '../../App.styles';\nimport {\n  selectisCPUChecked,\n  selectisFPSChecked,\n  selectisMEMChecked,\n} from '../../redux/reducers/fps/fps.selector';\nimport BasicComponent from '../basic/basic.component';\nimport CPUComponent from '../cpu/cpu.component';\nimport FPSComponent from '../fps/fps.component';\nimport MemComponent from '../mem/mem.component';\nimport SidePanel from '../side-panel/side-panel.component';\n\nconst HomeComponent = ({ isFPSChecked, isCPUChecked, isMemChecked }) => {\n  return (\n    <div>\n      <BasicComponent></BasicComponent>\n      <MetricContainer>\n        <SubContainer>\n          {isFPSChecked ? (\n            <FPSComponent></FPSComponent>\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n          {isCPUChecked ? (\n            <CPUComponent></CPUComponent>\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n          {isMemChecked ? (\n            <MemComponent></MemComponent>\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </SubContainer>\n        <SidePanel />\n      </MetricContainer>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isFPSChecked: selectisFPSChecked,\n  isCPUChecked: selectisCPUChecked,\n  isMemChecked: selectisMEMChecked,\n});\n\nexport default connect(mapStateToProps)(HomeComponent);\n","import React from 'react';\n\nconst NoMatchComponent = () => {\n  return <div>No match found</div>;\n};\n\nexport default NoMatchComponent;\n","import { createSelector } from 'reselect';\n\nconst directoryState = (state) => state.directory;\n\nexport const selectFolders = createSelector(\n  [directoryState],\n  (state) => state.folders\n);\n\nexport const selectPath = createSelector(\n  [directoryState],\n  (state) => state.selectedPath\n);\n","import styled from 'styled-components';\n\nexport const FolderIcon = styled.div`\n  .icon {\n    height: 200px;\n    width: 200px;\n    border-radius: 10px;\n    box-shadow: inset 0px 0px 4px black;\n    position: relative;\n    .folder {\n      position: absolute;\n      top: 70px;\n      left: 60px;\n      width: 60px;\n      height: 40px;\n      background: grey;\n      border-radius: 5px;\n    }\n    .folder-top {\n      position: absolute;\n      top: 75px;\n      left: 70px;\n      width: 30px;\n      height: 30px;\n      background: grey;\n      border-radius: 5px;\n      clip-path: polygon(50% 0%, 100% 50%, 100% 100%, 0 100%, 0 0);\n    }\n    .footer {\n      position: absolute;\n      border-top: 1px solid grey;\n      top: 170px;\n      left: 0px;\n      width: 200px;\n      height: 30px;\n      text-align: center;\n      label {\n        position: relative;\n        font-size: 0.9em;\n      }\n    }\n  }\n  * {\n    :hover {\n      cursor: pointer;\n      background: #00000012;\n    }\n  }\n`;\n","import React from 'react';\nimport { FolderIcon } from './folder.styles';\n\nconst Folder = ({ name }) => (\n  <div>\n    <FolderIcon>\n      <div className='icon'>\n        <div className='folder'></div>\n        <div className='folder-top'></div>\n        <div className='footer'>\n          <label>{name}</label>\n        </div>\n      </div>\n    </FolderIcon>\n  </div>\n);\n\nexport default Folder;\n","import styled from 'styled-components';\n\nexport const HeadingBar = styled.div`\n  margin: 20px 30px;\n  label {\n    font-size: 2em;\n    margin: 50px 10px;\n  }\n\n  border-bottom: 1px solid grey;\n`;\n\nexport const Directory = styled.div`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  margin: 30px;\n  .folder {\n    flex: 0 0 10%;\n    margin: 10px;\n  }\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Folder from '../folder/folder.component';\nimport {\n  selectFolders,\n  selectPath,\n} from '../../redux/reducers/directory/directory.selector';\nimport { Directory, HeadingBar } from './folderView.styles';\nimport { setPath } from '../../redux/actions';\nimport { Link } from 'react-router-dom';\n\nclass FolderView extends Component {\n  render() {\n    const { folders, level, title, path } = this.props;\n    const pathString = `${parseInt(level) + 1}/${path.slice(1).join('/')}`;\n\n    return (\n      <div>\n        <HeadingBar>\n          <label>{title}</label>\n        </HeadingBar>\n        <Directory>\n          {folders.map((folder, idx) => (\n            <Link\n              className='folder'\n              to={`/web/${pathString}/${folder.id}`}\n              key={idx}>\n              <Folder name={folder.id} />\n            </Link>\n          ))}\n        </Directory>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  folders: selectFolders,\n  path: selectPath,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPath: (val) => dispatch(setPath(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FolderView);\n","import React from 'react';\nimport MetricComponent from '../../metric/metric.component';\n\nconst DisplayChart = ({ chartData }) => {\n  const CPUValues = chartData['CPUValues'];\n  const MEMValues = chartData['MEMValues'];\n  const FPSValues = chartData['FPSValues'];\n  const deviceProps = chartData['deviceProps'];\n  const sessionTime = chartData['sessionTime'];\n  return (\n    <div>\n      <DisplayFPS FPSData={FPSValues} />\n      <DisplayCPU CPUData={CPUValues} />\n      <DisplayMEM MEMData={MEMValues} />\n    </div>\n  );\n};\n\nconst DisplayFPS = ({ FPSData }) => {\n  let data = [['Time(sec)', 'FPS']];\n  if (FPSData) {\n    FPSData.map((val) =>\n      data.push([parseFloat(val.duration), parseInt(val.value)])\n    );\n    return (\n      <MetricComponent data={data} name={['F', 'P', 'S']}></MetricComponent>\n    );\n  } else {\n    return <React.Fragment>FPS Data is not available</React.Fragment>;\n  }\n};\n\nconst DisplayCPU = ({ CPUData }) => {\n  let data = [['Time(sec)', 'App Usage', 'Device Usage']];\n  if (CPUData) {\n    CPUData.map((val) =>\n      data.push([\n        parseInt(val.duration),\n        parseFloat(val.app),\n        parseFloat(val.device),\n      ])\n    );\n    return (\n      <MetricComponent data={data} name={['C', 'P', 'U']}></MetricComponent>\n    );\n  } else {\n    return <React.Fragment>CPU Data is not available</React.Fragment>;\n  }\n};\n\nconst DisplayMEM = ({ MEMData }) => {\n  let data = [['Time(sec)', 'App Usage', 'Device Usage']];\n  if (MEMData) {\n    MEMData.map((val) =>\n      data.push([\n        parseInt(val.duration),\n        parseFloat(val.app),\n        parseFloat(val.device),\n      ])\n    );\n    return (\n      <MetricComponent\n        data={data}\n        name={['M', 'E', 'M', 'O', 'R', 'Y']}></MetricComponent>\n    );\n  } else {\n    return <React.Fragment>CPU Data is not available</React.Fragment>;\n  }\n};\n\nexport default DisplayChart;\n","import styled from 'styled-components';\n\nexport const Perimeter = styled.div`\n  .path {\n    display: flex;\n    justify-content: flex-start;\n    .path-child {\n    }\n  }\n`;\n","import _ from 'lodash';\nimport { getDocs, collectionGroup, query, where } from '@firebase/firestore';\nimport { db, getAllCollections, getDocument } from '../../../firebase/api';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { getAllDocuments } from '../../../firebase/api';\nimport { setFolders, setPath } from '../../../redux/actions';\nimport {\n  selectFolders,\n  selectPath,\n} from '../../../redux/reducers/directory/directory.selector';\nimport FolderView from '../../folderView/folderView.component';\nimport DisplayChart from '../display-chart/display-chart.component';\nimport { Perimeter } from './single.styles';\nimport { Link } from 'react-router-dom';\n\nclass Single extends React.Component {\n  state = {\n    folders: [],\n    loaded: false,\n    error: '',\n    itemType: '',\n    isFolder: false,\n    chartData: {},\n  };\n  componentDidMount() {\n    const {\n      path,\n      match: { params, url },\n    } = this.props;\n    //  Possible params we can expect from the params\n    // Type: Either Tree(directory) or Blob(graph) view\n    // l0, l1, l2, l3 - levels\n    const paramsValues = Object.values(params);\n    const dirLevel = params['level'];\n    let pathArray = paramsValues.slice(1);\n    switch (parseInt(dirLevel)) {\n      case 0:\n        break;\n      case 1:\n        pathArray = [...pathArray, 'Devices'];\n        break;\n      case 2:\n        pathArray = [...pathArray, 'Games'];\n        break;\n      case 3:\n        break;\n      default:\n        break;\n    }\n    if (dirLevel < '3') {\n      this.setState({ isFolder: true });\n      getAllDocuments(pathArray).then((documents) => {\n        let x = documents.docs.reduce(\n          (acc, doc) => [\n            ...acc,\n            { id: doc.id, data: doc.data(), ref: doc.ref },\n          ],\n          []\n        );\n        this.props.setFolders(x);\n      });\n    } else {\n      this.setState({ isFolder: false });\n      let documentDataPromise = new Promise((resolve, reject) => {\n        getDocument(pathArray).then((doc) => {\n          if (doc.exists) {\n            let docData = doc.data();\n            resolve(docData);\n          } else {\n            reject('The document does not exist');\n          }\n        });\n      });\n      documentDataPromise.then((data) => this.setState({ chartData: data }));\n    }\n    this.props.setPath([dirLevel, ...pathArray]);\n  }\n\n  render() {\n    return (\n      <Perimeter>\n        {this.props.path ? (\n          <div className='path'>\n            {this.props.path.map((path, idx) => {\n              if (idx === 0) {\n                return (\n                  <Link\n                    className='path-child ui label tag teal'\n                    to={`/web/0/Google`}>\n                    sessions\n                  </Link>\n                );\n              }\n              if (idx % 2 === 0) {\n                let updatedPath = this.props.path.slice(0, idx + 1);\n                let uPath = `${(updatedPath.length - 1) / 2}/${updatedPath\n                  .slice(1)\n                  .join('/')}`;\n                console.log(uPath, updatedPath);\n                return (\n                  <Link\n                    className='path-child ui label tag teal'\n                    to={`/web/${uPath}`}>\n                    {path}\n                  </Link>\n                );\n              } else {\n                return <React.Fragment></React.Fragment>;\n              }\n            })}\n          </div>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n        {this.state.isFolder ? (\n          <FolderView\n            folders={this.state.folders}\n            title='Google'\n            level={this.props.match.params['level']}\n          />\n        ) : (\n          <DisplayChart chartData={this.state.chartData}></DisplayChart>\n        )}\n      </Perimeter>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  folders: selectFolders,\n  path: selectPath,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFolders: (val) => dispatch(setFolders(val)),\n  setPath: (val) => dispatch(setPath(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Single);\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from './history';\nimport HeaderComponent from './components/header/header.component';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  selectError,\n  selectisCPUChecked,\n  selectisFPSChecked,\n  selectisMEMChecked,\n} from './redux/reducers/fps/fps.selector';\nimport { connect } from 'react-redux';\nimport { AnimatedPet, AppContainer } from './App.styles';\nimport HomeComponent from './components/home/home.component';\nimport NoMatchComponent from './components/no-match/no-match.component';\nimport Single from './components/sessions/singledir/single.component';\n\nclass App extends React.Component {\n  state = {\n    fpsOpen: false,\n    cpuOpen: false,\n    memOpen: false,\n  };\n\n  render() {\n    const { match } = this.props;\n    return (\n      <AppContainer>\n        {/* <Route path='/welcome' exact component={Welcome} /> */}\n        <HeaderComponent></HeaderComponent>\n        <div>\n          <Switch>\n            <Route exact path={`${match.path}`} component={HomeComponent} />\n            <Route\n              path={[\n                `${match.path}/:level/:l0`,\n                `${match.path}/:level/:l0/:l1`,\n                `${match.path}/:level/:l0/:l1/:l2`,\n                `${match.path}/:level/:l0/:l1/:l2/:l3`,\n                `${match.path}/:level/:l0/:l1/:l2/:l3/:l4`,\n                `${match.path}/:level/:l0/:l1/:l2/:l3/:l4/:l5`,\n                `${match.path}/:level/:l0/:l1/:l2/:l3/:l4/:l5/:l6`,\n              ]}\n              exact\n              component={(props) => (\n                <Single {...props} key={window.location.pathname} />\n              )}\n            />\n            <Route path='*' component={NoMatchComponent} />\n          </Switch>\n        </div>\n        <AnimatedPet length={this.props.displayError.length}>\n          <div className='pet'>\n            <div className='icon'>\n              <i class='rocketchat icon'></i>\n            </div>\n            {this.props.displayError ? (\n              <label className='label1'>{this.props.displayError}</label>\n            ) : (\n              <React.Fragment></React.Fragment>\n            )}\n          </div>\n        </AnimatedPet>\n      </AppContainer>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFPSChecked: selectisFPSChecked,\n  isCPUChecked: selectisCPUChecked,\n  isMemChecked: selectisMEMChecked,\n  displayError: selectError,\n});\n\nexport default connect(mapStateToProps)(App);\n","import './welcome.styles.scss';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Welcome = () => {\n  return (\n    <div className='main-page'>\n      <div className='help-box button'>\n        <label>How it works?</label>\n      </div>\n      <Link className='app button' to='/web'>\n        <i class='play circle icon black'></i>\n        <label>Launch App</label>\n      </Link>\n      <div className='header'>\n        <div className='logo-box'>\n          <div className='stopWatch'>\n            <div className='full-tick'></div>\n            <div className='push'></div>\n            <div className='side'></div>\n          </div>\n        </div>\n\n        <div className='text-box'>\n          <h1 className='heading-primary'>\n            <span className='main'>PerfMon</span>\n            <span className='sub'>Measure performance metrics</span>\n          </h1>\n        </div>\n      </div>\n      <div className='about'>\n        <div className='content'>\n          <h2 className='heading'>What do we measure?</h2>\n          <div className='cards'>\n            <div className='card'>\n              <div className='front'>\n                <div className='head'>FPS</div>\n                <div className='body'>\n                  Frame rate (frequently referred as frames per second) is\n                  defined as the frequency at rate the consecutive frames\n                  captures in a second.\n                </div>\n              </div>\n              <div className='back'>\n                <a\n                  href='https://developer.android.com/guide/topics/media/frame-rate'\n                  rel='noreferrer'\n                  target='_blank'>\n                  Learn More\n                </a>\n              </div>\n            </div>\n            <div className='card'>\n              <div className='front'>\n                <div className='head'>CPU</div>\n                <div className='body'>\n                  Captures the average CPU(%) values of device and the\n                  application.\n                </div>\n              </div>\n              <div className='back'>\n                <a\n                  href='https://developer.android.com/studio/profile/cpu-profiler'\n                  rel='noreferrer'\n                  target='_blank'>\n                  Learn More\n                </a>\n              </div>\n            </div>\n            <div className='card'>\n              <div className='front'>\n                <div className='head'>Memory</div>\n                <div className='body'>\n                  Captures the average Memory(MB) used by device and the\n                  application.\n                </div>\n              </div>\n              <div className='back'>\n                <a\n                  href='https://developer.android.com/studio/profile/memory-profiler'\n                  rel='noreferrer'\n                  target='_blank'>\n                  Learn more\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='footer'>\n        <div className='main'>\n          <div className='logo-box'>\n            <div className='stopWatch'>\n              <div className='full-tick'></div>\n              <div className='push'></div>\n              <div className='side'></div>\n            </div>\n          </div>\n          <div className='app-name'>PerfMon</div>\n        </div>\n        <div className='links'></div>\n        <div className='author'>\n          <div className='info'>\n            <div>\n              Developed by: <i class='copyright outline icon'></i> Chandra\n              Kishore Danduri\n            </div>\n            <div>Email: perfmonweb@gmail.com</div>\n            <div>\n              <i class='linkedin icon'></i>\n              <i class='github icon'></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport history from './history';\nimport { Router, Route, Switch, HashRouter } from 'react-router-dom';\nimport Welcome from './components/welcome/welcome.component';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter basename='/' history={history}>\n        {/* <PersistGate persistor={persistor}> */}\n        <div>\n          <Switch>\n            <Route exact path='/' component={Welcome} />\n            <Route path='/web' component={App} />\n          </Switch>\n        </div>\n        {/* </PersistGate> */}\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}